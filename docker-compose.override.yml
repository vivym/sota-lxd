version: "3.8"

services:
  proxy:
    ports:
      - 80:80
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Add a constraint to only use services with the label for this stack
      # from the env var TRAEFIK_TAG
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?traefik-tag}`)
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Disable Docker Swarm mode for local development
      # - --providers.docker.swarmmode
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.${STACK_NAME?sota-lxd}-traefik-public-http.rule=Host(`${DOMAIN?localhost}`)
      - traefik.http.services.${STACK_NAME?sota-lxd}-traefik-public.loadbalancer.server.port=80

  pgadmin:
    ports:
      - 5050:5050

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        INSTALL_JUPYTER: ${INSTALL_JUPYTER-false}
    environment:
      - SERVER_HOST=http://${DOMAIN?localhost}
    volumes:
      - ./backend:/app
    # command: bash -c "while true; do sleep 1; done"  # Infinite loop to keep container live doing nothing
    command: /start-reload.sh
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=${TRAEFIK_TAG?traefik-tag}
      - traefik.http.routers.${STACK_NAME?sota-lxd}-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
      - traefik.http.services.${STACK_NAME?sota-lxd}-backend.loadbalancer.server.port=80

networks:
  sota-lxd-public:
    # For local dev, don't expect an external Traefik network
    external: false
